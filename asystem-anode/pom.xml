<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.janeandgraham.asystem</groupId>
    <artifactId>asystem-anode</artifactId>
    <packaging>pom</packaging>
    <version>0.0.1-SNAPSHOT</version>

    <parent>
        <groupId>com.janeandgraham</groupId>
        <artifactId>asystem</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <properties>
        <dir.source.python>${project.basedir}/src/main/python</dir.source.python>
        <dir.output.python>${project.build.directory}/python</dir.output.python>
        <integration.test.anode.opts>--config=${dir.source.python}/config/anode.yaml --verbose</integration.test.anode.opts>
        <integration.test.anode.log>${project.build.directory}/anode-runtime/anode.log</integration.test.anode.log>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-model</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${dir.source.python}/anode/model</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>../asystem-amodel/src/main/resources/avro</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${dir.output.python}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${dir.source.python}</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.klieber</groupId>
                <artifactId>phantomjs-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <version>2.1.1</version>
                    <skip>${maven.integration-test.skip}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>integration-test</phase>
                    </execution>
                </executions>
                <configuration>
                    <skipJasmineTests>${maven.integration-test.skip}</skipJasmineTests>
                    <webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
                    <webDriverCapabilities>
                        <capability>
                            <name>phantomjs.binary.path</name>
                            <value>${phantomjs.binary}</value>
                        </capability>
                        <capability>
                            <name>phantomjs.cli.args</name>
                            <list>
                                <value>--webdriver-logfile=none</value>
                                <value>--webdriver-loglevel=ERROR</value>
                            </list>
                        </capability>
                    </webDriverCapabilities>
                    <jsSrcDir>${project.basedir}/src/main/python/anode/web/js</jsSrcDir>
                    <jsTestSrcDir>${project.basedir}/src/main/python/anode/test/js</jsTestSrcDir>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>python-clean</id>
                        <phase>clean</phase>
                        <configuration>
                            <target unless="${maven.integration-test.skip}">
                                <exec executable="python" dir="${dir.source.python}" failonerror="true">
                                    <arg value="setup.py" />
                                    <arg value="clean" />
                                </exec>
                                <exec executable="/bin/sh" failonerror="true" failifexecutionfails="true">
                                    <arg value="-c" />
                                    <arg value="ANODE_OPTS='${integration.test.anode.opts}' ANODE_LOG_FILE='${integration.test.anode.log}' ${dir.source.python}/script/anode stop" />
                                </exec>
                                <delete file="${project.basedir}/phantomjsdriver.log" />
                                <delete file="${project.basedir}/../phantomjsdriver.log" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>python-test</id>
                        <phase>test</phase>
                        <configuration>
                            <target unless="${maven.test.skip}">
                                <exec executable="python" dir="${dir.output.python}" failonerror="true">
                                    <arg value="setup.py" />
                                    <arg value="trial" />
                                    <arg value="--reporter=text" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>python-integration-test-pre</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <target unless="${maven.integration-test.skip}">
                                <exec executable="python" dir="${dir.output.python}" failonerror="true">
                                    <arg value="setup.py" />
                                    <arg value="develop" />
                                    <arg value="--user" />
                                </exec>
                                <echo>

                                </echo>
                                <exec executable="/bin/sh" failonerror="true" failifexecutionfails="true">
                                    <arg value="-c" />
                                    <arg value="ANODE_OPTS='${integration.test.anode.opts}' ANODE_LOG_FILE='${integration.test.anode.log}' ${dir.source.python}/script/anode start" />
                                </exec>
                                <echo>

                                </echo>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>python-integration-test-post</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <target unless="${maven.integration-test.skip}">
                                <echo>

                                </echo>
                                <exec executable="/bin/sh" failonerror="true" failifexecutionfails="true">
                                    <arg value="-c" />
                                    <arg value="ANODE_OPTS='${integration.test.anode.opts}' ANODE_LOG_FILE='${integration.test.anode.log}' ${dir.source.python}/script/anode stop" />
                                </exec>
                                <echo>

                                </echo>
                                <delete file="${project.basedir}/phantomjsdriver.log" />
                                <delete file="${project.basedir}/../phantomjsdriver.log" />
                                <exec executable="python" dir="${dir.output.python}" failonerror="false">
                                    <arg value="setup.py" />
                                    <arg value="develop" />
                                    <arg value="--user" />
                                    <arg value="--uninstall" />
                                </exec>
                                <exec executable="python" dir="${dir.source.python}" failonerror="true">
                                    <arg value="setup.py" />
                                    <arg value="clean" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>python-package</id>
                        <phase>package</phase>
                        <configuration>
                            <target unless="${maven.package.skip}">
                                <exec executable="python" dir="${dir.output.python}" failonerror="true">
                                    <arg value="setup.py" />
                                    <arg value="sdist" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>python-run</id>
                        <configuration>
                            <target>
                                <exec executable="python" dir="${dir.source.python}" failonerror="true">
                                    <arg value="setup.py" />
                                    <arg value="develop" />
                                    <arg value="--user" />
                                </exec>
                                <exec executable="anode" dir="${dir.source.python}" failonerror="true" failifexecutionfails="true">
                                    <arg value="-v" />
                                    <arg value="-c${dir.source.python}/config/anode.yaml" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>python-install</id>
                        <phase>install</phase>
                        <configuration>
                            <target unless="${maven.install.skip}">
                                <exec executable="/usr/bin/sudo" dir="${dir.output.python}" failonerror="true">
                                    <arg value="/usr/bin/python" />
                                    <arg value="setup.py" />
                                    <arg value="install" />
                                </exec>
                                <exec executable="/usr/bin/sudo" dir="${dir.output.python}" failonerror="true">
                                    <arg value="/bin/mkdir" />
                                    <arg value="-p" />
                                    <arg value="/etc/anode" />
                                </exec>
                                <exec executable="/usr/bin/sudo" dir="${dir.output.python}" failonerror="true">
                                    <arg value="/bin/cp" />
                                    <arg value="-rvf" />
                                    <arg value="${dir.output.python}/config/anode.yaml" />
                                    <arg value="/etc/anode" />
                                </exec>
                                <exec executable="/usr/bin/sudo" dir="${dir.output.python}" failonerror="true">
                                    <arg value="/bin/cp" />
                                    <arg value="-vrf" />
                                    <arg value="${dir.output.python}/script/anode" />
                                    <arg value="/etc/init.d" />
                                </exec>
                                <exec executable="/usr/bin/sudo" dir="${dir.output.python}" failonerror="true">
                                    <arg value="/bin/chmod" />
                                    <arg value="+x" />
                                    <arg value="/etc/init.d/anode" />
                                </exec>
                                <exec executable="/usr/bin/sudo" dir="${dir.output.python}" failonerror="true">
                                    <arg value="/bin/systemctl" />
                                    <arg value="daemon-reload" />
                                </exec>
                                <exec executable="/usr/bin/sudo" dir="${dir.output.python}" failonerror="true">
                                    <arg value="/bin/systemctl" />
                                    <arg value="enable" />
                                    <arg value="anode" />
                                </exec>
                                <exec executable="/usr/bin/sudo" dir="${dir.output.python}" failonerror="true">
                                    <arg value="/usr/bin/python" />
                                    <arg value="setup.py" />
                                    <arg value="clean" />
                                </exec>
                                <exec executable="/usr/bin/sudo" dir="${dir.output.python}" failonerror="true">
                                    <arg value="/usr/sbin/service" />
                                    <arg value="anode" />
                                    <arg value="stop" />
                                </exec>
                                <exec executable="/usr/bin/sudo" dir="${dir.output.python}" failonerror="true">
                                    <arg value="/usr/sbin/service" />
                                    <arg value="anode" />
                                    <arg value="start" />
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
